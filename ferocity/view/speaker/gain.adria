/*
 * ferocity Sidescroller Engine
 * Copyright (C) 2014 Dennis MÃ¶hlmann <mail@dennismoehlmann.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var Speaker = require('../speaker');

module Gain = proto (Speaker) {

    protected gain: null,

    public constructor: func(object audio, string file, boolean start = true) {

        Speaker->constructor(audio, file);

        this.gain = audio.ctx.createGain();
        this.source = this.createSource(this.buffer.data, this.gain);

        if (start) {
            this.playWhenReady();
        }
    },

    public fadeOut: func(finite duration) {

        var ctx = this.audio.ctx;
        var gain = this.gain.gain;

        for (var i = 0; i <= 10; i++) {
            gain.linearRampToValueAtTime(1 - (i/10), ctx.currentTime + (duration / 10 * i));//!todo 2 points
        }
    },

    public destroy: func() {

        //this.gain.disconnect(0); //!todo actually seems to prevent the source from being disconnected properly, blowing up v8 after a while...
        this.gain = null;
        Speaker->destroy();
    },
};
