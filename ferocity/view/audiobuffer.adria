/*
 * ferocity Sidescroller Engine
 * Copyright (C) 2014 Dennis Möhlmann <mail@dennismoehlmann.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var Listenable = require('astd/listenable');

module Buffer = proto (Listenable) {

    public data: null,
    public status: 'loading',
    public message: '',
    public file: '',

    protected audio: null,

    public constructor: func(object audio, file = null) {

        this.audio = audio;

        if (file !== null) {
            this.load(file);
        }
    },

    public load: func(string file) {

        this.file = file;

        var audio = this.audio;
        var buffer = this;
        var request = new XMLHttpRequest();

        request.open('GET', file, true);
        request.responseType = 'arraybuffer';

        request.onload = func() {
            buffer.status = 'decoding';
            audio.ctx.decodeAudioData(
                request.response,
                func(data) {
                    buffer.status = 'ready';
                    buffer.data = data;
                    buffer.execute('ready');
                },
                func(e) {
                    buffer.status = 'failed';
                    buffer.message = e.err;
                    buffer.execute('error');
                }
            );
        };

        request.onerror = func() {
            buffer.status = 'failed';
            buffer.message = 'i/o error';
            buffer.execute('error');
        };

        request.send();
    }
};